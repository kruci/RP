Vysledok RP - Vseobecna reprezentacia svetelnych zdrojov v 3D

public class Beam{
	SpatialData sd;

	LightSource parent;

	ColorData c;
}
Beam potrebuje mat nejake informacie o tom odkail a kam ide, to bude repreznetované struktúrov SpatialData (V nasom prípade
by sd obsahovalo Vector3 origin - bod kde zacina a Vector3 direction - Vector kam smeruje, ale napr direction by mohlo byt 
nahradene iba 2 uhlamy coz by usetrilo pamat)
ColorData nejako reprezentuje farbu (u SPD je to lambda a power)


Musime zabezpecit ze secky beemy maju rovnaku strukturu pre ColorData i pre SpatialData, zakze staci pre LS iba samotne LS
a potom LS nekopatibilne s rendereom wrapnut do LS kere spravy transoframciu beamu vzy ked sa zavola getNextBeam().

interface LightSource extends java.io.Serializable{

	Beam getNextBeam();
	double numberOfBeams();
}

getNextBeam() vyraba luce, numberOfBeams() nam povie kolky och uz vyrobil - potrebne aby fungovala Color 
pre rozne reprezentacie (RGB to asi nebude potrebovat, ale RGB podla mna neni dobri ak chceme VSEOBECNU repprezentaciu svetla)

Ak teda mame nejkay (uz plne implementovany) LS v subore, stacia aby mal tie 2 funkcie a sme schopny ho pouzivat.  